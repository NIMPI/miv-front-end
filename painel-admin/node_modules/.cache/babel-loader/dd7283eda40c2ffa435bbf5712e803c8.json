{"remainingRequest":"C:\\Users\\VictorBailiot\\Documents\\GitHub\\miv-front-end\\painel-admin\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\VictorBailiot\\Documents\\GitHub\\miv-front-end\\painel-admin\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\VictorBailiot\\Documents\\GitHub\\miv-front-end\\painel-admin\\src\\modules\\auth\\store\\actions.js","dependencies":[{"path":"C:\\Users\\VictorBailiot\\Documents\\GitHub\\miv-front-end\\painel-admin\\src\\modules\\auth\\store\\actions.js","mtime":1597894565844},{"path":"C:\\Users\\VictorBailiot\\Documents\\GitHub\\miv-front-end\\painel-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1597894495965},{"path":"C:\\Users\\VictorBailiot\\Documents\\GitHub\\miv-front-end\\painel-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1597894495602},{"path":"C:\\Users\\VictorBailiot\\Documents\\GitHub\\miv-front-end\\painel-admin\\node_modules\\eslint-loader\\index.js","mtime":1597894497855}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\VictorBailiot\\\\Documents\\\\GitHub\\\\miv-front-end\\\\painel-admin\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport services from '@/http';\nimport * as storage from \"../storage\";\nimport * as types from \"./mutation-types\";\nexport var ActionDoLogin = function ActionDoLogin(_ref, payload) {\n  var dispatch = _ref.dispatch;\n  return services.auth.login(payload).then(function (res) {\n    /* dispatch('ActionSetUser', res.data.user) */\n    dispatch('ActionSetToken', res.data.token);\n  });\n};\nexport var ActionCheckToken = function ActionCheckToken(_ref2) {\n  var dispatch = _ref2.dispatch,\n      state = _ref2.state;\n\n  if (state.token) {\n    return Promise.resolve(state.token);\n  }\n\n  var token = storage.getLocalToken();\n\n  if (!token) {\n    return Promise.reject(new Error('Token Inválido'));\n  }\n\n  dispatch('ActionSetToken', token);\n  return dispatch('ActionLoadSession');\n};\nexport var ActionLoadSession = function ActionLoadSession(_ref3) {\n  var dispatch = _ref3.dispatch;\n  return new Promise(\n  /*#__PURE__*/\n  function () {\n    var _ref4 = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(resolve, reject) {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              try {\n                /* const { data: { user } } = await services.auth.loadSession()\r\n                dispatch('ActionSetUser', user) */\n                resolve();\n              } catch (err) {\n                dispatch('ActionSignOut');\n                reject(err);\n              }\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }());\n};\n/* export const ActionSetUser = ({ commit }, payload) => {\r\n  commit(types.SET_USER, payload)\r\n} */\n\nexport var ActionSetToken = function ActionSetToken(_ref5, payload) {\n  var commit = _ref5.commit;\n  storage.setLocalToken(payload);\n  storage.setHeaderToken(payload);\n  commit(types.SET_TOKEN, payload);\n};\nexport var ActionSignOut = function ActionSignOut(_ref6) {\n  var dispatch = _ref6.dispatch;\n  storage.setHeaderToken('');\n  storage.deleteLocalToken();\n  /* dispatch('ActionSetUser', {}) */\n\n  dispatch('ActionSetToken', '');\n};",{"version":3,"sources":["C:\\Users\\VictorBailiot\\Documents\\GitHub\\miv-front-end\\painel-admin\\src\\modules\\auth\\store\\actions.js"],"names":["services","storage","types","ActionDoLogin","payload","dispatch","auth","login","then","res","data","token","ActionCheckToken","state","Promise","resolve","getLocalToken","reject","Error","ActionLoadSession","err","ActionSetToken","commit","setLocalToken","setHeaderToken","SET_TOKEN","ActionSignOut","deleteLocalToken"],"mappings":";;AAAA,OAAOA,QAAP,MAAqB,QAArB;AACA,OAAO,KAAKC,OAAZ;AACA,OAAO,KAAKC,KAAZ;AAEA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAeC,OAAf,EAA2B;AAAA,MAAxBC,QAAwB,QAAxBA,QAAwB;AACtD,SAAOL,QAAQ,CAACM,IAAT,CAAcC,KAAd,CAAoBH,OAApB,EAA6BI,IAA7B,CAAkC,UAAAC,GAAG,EAAI;AAC9C;AACAJ,IAAAA,QAAQ,CAAC,gBAAD,EAAmBI,GAAG,CAACC,IAAJ,CAASC,KAA5B,CAAR;AACD,GAHM,CAAP;AAID,CALM;AAOP,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,QAAyB;AAAA,MAAtBP,QAAsB,SAAtBA,QAAsB;AAAA,MAAZQ,KAAY,SAAZA,KAAY;;AACvD,MAAIA,KAAK,CAACF,KAAV,EAAiB;AACf,WAAOG,OAAO,CAACC,OAAR,CAAgBF,KAAK,CAACF,KAAtB,CAAP;AACD;;AAED,MAAMA,KAAK,GAAGV,OAAO,CAACe,aAAR,EAAd;;AAEA,MAAI,CAACL,KAAL,EAAY;AACV,WAAOG,OAAO,CAACG,MAAR,CAAe,IAAIC,KAAJ,CAAU,gBAAV,CAAf,CAAP;AACD;;AAEDb,EAAAA,QAAQ,CAAC,gBAAD,EAAmBM,KAAnB,CAAR;AACA,SAAON,QAAQ,CAAC,mBAAD,CAAf;AACD,CAbM;AAeP,OAAO,IAAMc,iBAAiB,GAAG,SAApBA,iBAAoB,QAAkB;AAAA,MAAfd,QAAe,SAAfA,QAAe;AACjD,SAAO,IAAIS,OAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAY,iBAAOC,OAAP,EAAgBE,MAAhB;AAAA;AAAA;AAAA;AAAA;AACjB,kBAAI;AACF;;AAEAF,gBAAAA,OAAO;AACR,eAJD,CAIE,OAAOK,GAAP,EAAY;AACZf,gBAAAA,QAAQ,CAAC,eAAD,CAAR;AACAY,gBAAAA,MAAM,CAACG,GAAD,CAAN;AACD;;AARgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAZ;;AAAA;AAAA;AAAA;AAAA,MAAP;AAUD,CAXM;AAaP;;;;AAIA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,QAAajB,OAAb,EAAyB;AAAA,MAAtBkB,MAAsB,SAAtBA,MAAsB;AACrDrB,EAAAA,OAAO,CAACsB,aAAR,CAAsBnB,OAAtB;AACAH,EAAAA,OAAO,CAACuB,cAAR,CAAuBpB,OAAvB;AACAkB,EAAAA,MAAM,CAACpB,KAAK,CAACuB,SAAP,EAAkBrB,OAAlB,CAAN;AACD,CAJM;AAMP,OAAO,IAAMsB,aAAa,GAAG,SAAhBA,aAAgB,QAAkB;AAAA,MAAfrB,QAAe,SAAfA,QAAe;AAC7CJ,EAAAA,OAAO,CAACuB,cAAR,CAAuB,EAAvB;AACAvB,EAAAA,OAAO,CAAC0B,gBAAR;AACA;;AACAtB,EAAAA,QAAQ,CAAC,gBAAD,EAAmB,EAAnB,CAAR;AACD,CALM","sourcesContent":["import services from '@/http'\r\nimport * as storage from '../storage'\r\nimport * as types from './mutation-types'\r\n\r\nexport const ActionDoLogin = ({ dispatch }, payload) => {\r\n  return services.auth.login(payload).then(res => {\r\n    /* dispatch('ActionSetUser', res.data.user) */\r\n    dispatch('ActionSetToken', res.data.token)\r\n  })\r\n}\r\n\r\nexport const ActionCheckToken = ({ dispatch, state }) => {\r\n  if (state.token) {\r\n    return Promise.resolve(state.token)\r\n  }\r\n\r\n  const token = storage.getLocalToken()\r\n\r\n  if (!token) {\r\n    return Promise.reject(new Error('Token Inválido'))\r\n  }\r\n\r\n  dispatch('ActionSetToken', token)\r\n  return dispatch('ActionLoadSession')\r\n}\r\n\r\nexport const ActionLoadSession = ({ dispatch }) => {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      /* const { data: { user } } = await services.auth.loadSession()\r\n      dispatch('ActionSetUser', user) */\r\n      resolve()\r\n    } catch (err) {\r\n      dispatch('ActionSignOut')\r\n      reject(err)\r\n    }\r\n  })\r\n}\r\n\r\n/* export const ActionSetUser = ({ commit }, payload) => {\r\n  commit(types.SET_USER, payload)\r\n} */\r\n\r\nexport const ActionSetToken = ({ commit }, payload) => {\r\n  storage.setLocalToken(payload)\r\n  storage.setHeaderToken(payload)\r\n  commit(types.SET_TOKEN, payload)\r\n}\r\n\r\nexport const ActionSignOut = ({ dispatch }) => {\r\n  storage.setHeaderToken('')\r\n  storage.deleteLocalToken()\r\n  /* dispatch('ActionSetUser', {}) */\r\n  dispatch('ActionSetToken', '')\r\n}\r\n"]}]}