{"remainingRequest":"C:\\Users\\VictorBailiot\\Documents\\GitHub\\miv-front-end\\painel-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\VictorBailiot\\Documents\\GitHub\\miv-front-end\\painel-admin\\src\\components\\SerieBox.vue?vue&type=style&index=0&id=56fcc35f&lang=scss&scoped=true&","dependencies":[{"path":"C:\\Users\\VictorBailiot\\Documents\\GitHub\\miv-front-end\\painel-admin\\src\\components\\SerieBox.vue","mtime":1577212511000},{"path":"C:\\Users\\VictorBailiot\\Documents\\GitHub\\miv-front-end\\painel-admin\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\VictorBailiot\\Documents\\GitHub\\miv-front-end\\painel-admin\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\VictorBailiot\\Documents\\GitHub\\miv-front-end\\painel-admin\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\VictorBailiot\\Documents\\GitHub\\miv-front-end\\painel-admin\\node_modules\\sass-loader\\lib\\loader.js","mtime":1533139052000},{"path":"C:\\Users\\VictorBailiot\\Documents\\GitHub\\miv-front-end\\painel-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\VictorBailiot\\Documents\\GitHub\\miv-front-end\\painel-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.card {\n  cursor: pointer;\n  transition: .4s;\n  color: var(--dark);\n  &:hover {\n    text-decoration: none;\n    box-shadow: 1px 1px 20px rgba(0,0,0,0.5)\n  }\n}\n",{"version":3,"sources":["SerieBox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SerieBox.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <router-link\n    class=\"card mb-4\"\n    :to=\"{ name: 'show-serie', params: { id: serie.id } }\"\n  >\n    <img\n      height=\"400px\"\n      :src=\"serie.image\"\n      class=\"card-image-top\"\n    >\n\n    <div class=\"card-body\">\n      <h3 class=\"text-center mb-0\">\n        {{ serie.title }}\n      </h3>\n      <div class=\"row text-center mt-3\">\n        <div class=\"col\">\n          <button class=\"btn btn-sm btn-outline-primary\" @click.prevent=\"toggleWatchlist()\">\n            {{ serie.watchlist ? 'Remover da' : 'Adicionar na' }} watchlist\n          </button>\n        </div>\n        <div class=\"col\">\n          <button class=\"btn btn-sm btn-outline-warning\" @click.prevent=\"toggleWatchedlist()\">\n            {{ serie.watched ? 'Remover da' : 'Adicionar na' }} watchedlist\n          </button>\n        </div>\n      </div>\n    </div>\n  </router-link>\n</template>\n\n<script>\nimport { mapActions } from 'vuex'\n\nexport default {\n  props: {\n    serie: { type: Object, required: true }\n  },\n  methods: {\n    ...mapActions('series', ['ActionFindSerieslist']),\n    ...mapActions('watchedlist', [\n      'ActionFindWatchedlist',\n      'ActionAddOnWatchedlist',\n      'ActionDeleteFromWatchedlist'\n    ]),\n    ...mapActions('watchlist', [\n      'ActionFindWatchlist',\n      'ActionAddOnWatchlist',\n      'ActionDeleteFromWatchlist'\n    ]),\n    async toggleWatchlist () {\n      try {\n        if (this.serie.watched) {\n          await this.ActionDeleteFromWatchedlist(this.serie.id)\n        }\n\n        if (this.serie.watchlist) {\n          await this.ActionDeleteFromWatchlist(this.serie.id)\n\n          window.alert('Deletada com sucesso')\n        } else {\n          await this.ActionAddOnWatchlist({ serieId: this.serie.id })\n\n          window.alert('Adicionada com sucesso')\n        }\n\n        this.refresh()\n      } catch (error) {\n        window.alert('Ocorreu algum erro')\n        console.error(error)\n      }\n    },\n    async toggleWatchedlist () {\n      try {\n        if (this.serie.watchlist) {\n          await this.ActionDeleteFromWatchlist(this.serie.id)\n        }\n\n        if (this.serie.watched) {\n          await this.ActionDeleteFromWatchedlist(this.serie.id)\n\n          window.alert('Deletada com sucesso')\n        } else {\n          await this.ActionAddOnWatchedlist({ serieId: this.serie.id })\n\n          window.alert('Adicionada com sucesso')\n        }\n\n        this.refresh()\n      } catch (error) {\n        window.alert('Ocorreu algum erro')\n        console.error(error)\n      }\n    },\n    refresh () {\n      const { name } = this.$route\n\n      if (name === 'series') {\n        return this.ActionFindSerieslist()\n      }\n\n      if (name === 'watchedlist') {\n        return this.ActionFindWatchedlist()\n      }\n\n      return this.ActionFindWatchlist()\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.card {\n  cursor: pointer;\n  transition: .4s;\n  color: var(--dark);\n  &:hover {\n    text-decoration: none;\n    box-shadow: 1px 1px 20px rgba(0,0,0,0.5)\n  }\n}\n</style>\n"]}]}