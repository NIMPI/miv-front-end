{"remainingRequest":"C:\\Users\\VictorBailiot\\Documents\\GitHub\\miv-front-end\\painel-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\VictorBailiot\\Documents\\GitHub\\miv-front-end\\painel-admin\\src\\components\\SerieBox.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\VictorBailiot\\Documents\\GitHub\\miv-front-end\\painel-admin\\src\\components\\SerieBox.vue","mtime":1592966368330},{"path":"C:\\Users\\VictorBailiot\\Documents\\GitHub\\miv-front-end\\painel-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1592282344986},{"path":"C:\\Users\\VictorBailiot\\Documents\\GitHub\\miv-front-end\\painel-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1592282344130},{"path":"C:\\Users\\VictorBailiot\\Documents\\GitHub\\miv-front-end\\painel-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1592282344986},{"path":"C:\\Users\\VictorBailiot\\Documents\\GitHub\\miv-front-end\\painel-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1592282430107}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { mapActions } from 'vuex'\r\n\r\nexport default {\r\n  props: {\r\n    serie: { type: Object, required: true }\r\n  },\r\n  methods: {\r\n    ...mapActions('series', ['ActionFindSerieslist']),\r\n    ...mapActions('watchedlist', [\r\n      'ActionFindWatchedlist',\r\n      'ActionAddOnWatchedlist',\r\n      'ActionDeleteFromWatchedlist'\r\n    ]),\r\n    ...mapActions('watchlist', [\r\n      'ActionFindWatchlist',\r\n      'ActionAddOnWatchlist',\r\n      'ActionDeleteFromWatchlist'\r\n    ]),\r\n    async toggleWatchlist () {\r\n      try {\r\n        if (this.serie.watched) {\r\n          await this.ActionDeleteFromWatchedlist(this.serie.id)\r\n        }\r\n\r\n        if (this.serie.watchlist) {\r\n          await this.ActionDeleteFromWatchlist(this.serie.id)\r\n\r\n          window.alert('Deletada com sucesso')\r\n        } else {\r\n          await this.ActionAddOnWatchlist({ serieId: this.serie.id })\r\n\r\n          window.alert('Adicionada com sucesso')\r\n        }\r\n\r\n        this.refresh()\r\n      } catch (error) {\r\n        window.alert('Ocorreu algum erro')\r\n        console.error(error)\r\n      }\r\n    },\r\n    async toggleWatchedlist () {\r\n      try {\r\n        if (this.serie.watchlist) {\r\n          await this.ActionDeleteFromWatchlist(this.serie.id)\r\n        }\r\n\r\n        if (this.serie.watched) {\r\n          await this.ActionDeleteFromWatchedlist(this.serie.id)\r\n\r\n          window.alert('Deletada com sucesso')\r\n        } else {\r\n          await this.ActionAddOnWatchedlist({ serieId: this.serie.id })\r\n\r\n          window.alert('Adicionada com sucesso')\r\n        }\r\n\r\n        this.refresh()\r\n      } catch (error) {\r\n        window.alert('Ocorreu algum erro')\r\n        console.error(error)\r\n      }\r\n    },\r\n    refresh () {\r\n      const { name } = this.$route\r\n\r\n      if (name === 'series') {\r\n        return this.ActionFindSerieslist()\r\n      }\r\n\r\n      if (name === 'watchedlist') {\r\n        return this.ActionFindWatchedlist()\r\n      }\r\n\r\n      return this.ActionFindWatchlist()\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["SerieBox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"SerieBox.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <router-link\r\n    class=\"card mb-4\"\r\n    :to=\"{ name: 'show-serie', params: { id: serie.id } }\"\r\n  >\r\n    <img\r\n      height=\"400px\"\r\n      :src=\"serie.image\"\r\n      class=\"card-image-top\"\r\n    >\r\n\r\n    <div class=\"card-body\">\r\n      <h3 class=\"text-center mb-0\">\r\n        {{ serie.title }}\r\n      </h3>\r\n      <div class=\"row text-center mt-3\">\r\n        <div class=\"col\">\r\n          <button class=\"btn btn-sm btn-outline-primary\" @click.prevent=\"toggleWatchlist()\">\r\n            {{ serie.watchlist ? 'Remover da' : 'Adicionar na' }} watchlist\r\n          </button>\r\n        </div>\r\n        <div class=\"col\">\r\n          <button class=\"btn btn-sm btn-outline-warning\" @click.prevent=\"toggleWatchedlist()\">\r\n            {{ serie.watched ? 'Remover da' : 'Adicionar na' }} watchedlist\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </router-link>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions } from 'vuex'\r\n\r\nexport default {\r\n  props: {\r\n    serie: { type: Object, required: true }\r\n  },\r\n  methods: {\r\n    ...mapActions('series', ['ActionFindSerieslist']),\r\n    ...mapActions('watchedlist', [\r\n      'ActionFindWatchedlist',\r\n      'ActionAddOnWatchedlist',\r\n      'ActionDeleteFromWatchedlist'\r\n    ]),\r\n    ...mapActions('watchlist', [\r\n      'ActionFindWatchlist',\r\n      'ActionAddOnWatchlist',\r\n      'ActionDeleteFromWatchlist'\r\n    ]),\r\n    async toggleWatchlist () {\r\n      try {\r\n        if (this.serie.watched) {\r\n          await this.ActionDeleteFromWatchedlist(this.serie.id)\r\n        }\r\n\r\n        if (this.serie.watchlist) {\r\n          await this.ActionDeleteFromWatchlist(this.serie.id)\r\n\r\n          window.alert('Deletada com sucesso')\r\n        } else {\r\n          await this.ActionAddOnWatchlist({ serieId: this.serie.id })\r\n\r\n          window.alert('Adicionada com sucesso')\r\n        }\r\n\r\n        this.refresh()\r\n      } catch (error) {\r\n        window.alert('Ocorreu algum erro')\r\n        console.error(error)\r\n      }\r\n    },\r\n    async toggleWatchedlist () {\r\n      try {\r\n        if (this.serie.watchlist) {\r\n          await this.ActionDeleteFromWatchlist(this.serie.id)\r\n        }\r\n\r\n        if (this.serie.watched) {\r\n          await this.ActionDeleteFromWatchedlist(this.serie.id)\r\n\r\n          window.alert('Deletada com sucesso')\r\n        } else {\r\n          await this.ActionAddOnWatchedlist({ serieId: this.serie.id })\r\n\r\n          window.alert('Adicionada com sucesso')\r\n        }\r\n\r\n        this.refresh()\r\n      } catch (error) {\r\n        window.alert('Ocorreu algum erro')\r\n        console.error(error)\r\n      }\r\n    },\r\n    refresh () {\r\n      const { name } = this.$route\r\n\r\n      if (name === 'series') {\r\n        return this.ActionFindSerieslist()\r\n      }\r\n\r\n      if (name === 'watchedlist') {\r\n        return this.ActionFindWatchedlist()\r\n      }\r\n\r\n      return this.ActionFindWatchlist()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.card {\r\n  cursor: pointer;\r\n  transition: .4s;\r\n  color: var(--dark);\r\n  &:hover {\r\n    text-decoration: none;\r\n    box-shadow: 1px 1px 20px rgba(0,0,0,0.5)\r\n  }\r\n}\r\n</style>\r\n"]}]}